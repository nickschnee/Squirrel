model <- glm(Number.of.Squirrels ~ sunny + drizzly + cloudy + foggy + rainy + humid,
data = weather,
family = poisson())
summary(model)
# Fit the GLM
model <- glm(Number.of.Squirrels ~ sunny + drizzly + cloudy + foggy + rainy + humid + Shift + Hectare.Conditions + temperature_celsius,
data = weather,
family = poisson())
# Summarize the model
summary(model)
reg <- glm(Number.of.Squirrels ~ temperature_celsius * Shift, data = weather, family = poisson())
summary(reg)
View(p_windy)
library(osmdata)
library(sf)
library(ggmap)
squirrels <- read.csv("joint_squirrels.csv")
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = sunny, alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Sunny",
values = c("gray", "orange"),
labels = c("Not sunny", "Sunny"))
# Heatmap with squirrels per hectare in central park
ggplot(data = weather, cache = TRUE, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "brown") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel density per hectare") +
theme(legend.position = "bottom")
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Sunny",
values = c("gray", "red"),
labels = c("Not 14B", "14B"))
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = sunny, alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Sunny",
values = c("gray", "orange"),
labels = c("Not sunny", "Sunny"))
View(hectare)
View(hectare)
View(squirrels)
View(squirrels)
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(Hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Sunny",
values = c("gray", "red"),
labels = c("Not 14B", "14B"))
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(Hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Hectare",
values = c("brown", "red"),
labels = c("Other Hectares", "14B"))
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(Hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Hectare",
values = c("blue", "red"),
labels = c("Other Hectares", "14B"))
library(osmdata)
library(sf)
library(ggmap)
squirrels <- read.csv("joint_squirrels.csv")
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(Hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Hectare",
values = c("blue", "red"),
labels = c("Other Hectares", "14B"))
weather_sunny <- subset(weather, sunny == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when sunny
p_sunny <- ggplot(data = weather_sunny, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "gold") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Sunny)") +
theme(legend.position = "bottom")
p_sunny
weather_sunny <- subset(weather, sunny == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when sunny
p_sunny <- ggplot(data = weather_sunny, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "gold") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("☀️ Squirrel Density per Hectare (Sunny)") +
theme(legend.position = "bottom")
p_sunny
weather_sunny <- subset(weather, sunny == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when sunny
p_sunny <- ggplot(data = weather_sunny, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "gold") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Sunny)") +
theme(legend.position = "bottom")
p_sunny
hectare <- read.csv("2018_Central_Park_Squirrel_Census_-_Hectare_Data.csv")
squirrels <- read.csv("2018_Central_Park_Squirrel_Census_-_Squirrel_Data.csv")
weather <- tolower(hectare$Sighter.Observed.Weather.Data)
head(weather)
library(stringr)
# find temperature with regex
temp_fahrenheit <- as.numeric(str_extract(weather, "\\d+"))
# define function to convert from F to C
fahrenheit_to_celsius <- function(x) {
if(!is.na(x)){
(x - 32) * 5/9
} else {
NA
}
}
# convert to celsius and then round to one decimal
temp_celsius <- round(sapply(temp_fahrenheit, fahrenheit_to_celsius), 1)
# add column to file
hectare$temperature_celsius <- temp_celsius
weather_split <- str_split(weather, ",")
unique_weather <- str_trim(unique(unlist(weather_split)))
weather_no_numbers <- str_trim(unlist(weather_split), side = "both")[!str_detect(str_trim(unlist(weather_split), side = "both"), "\\d")]
top_10 <- sort(table(weather_no_numbers), decreasing = TRUE)[1:10]
top_10
detect_weather <- function(x, words_positive, words_negative = character(0)) {
detect <- any(str_detect(x, paste(words_positive, collapse = "|")))
if (detect == TRUE && length(words_negative) > 0) {
not_detect <- any(str_detect(x, paste(words_negative, collapse = "|")))
if (not_detect == TRUE) {
detect <- FALSE
}
}
detect
}
words_sun <- c("sun", "clear", "bright", "blue", "pleasant", "perfect", "not a cloud", "nice", "fair", "crisp")
sunny <- sapply(weather_split, function(x) detect_weather(x, words_sun))
sunny[1:10]
weather <- read.csv("hectare_weather.csv")
squirrels <- read.csv("joint_squirrels.csv")
hectare <- read.csv("2018_Central_Park_Squirrel_Census_-_Hectare_Grid.csv")
plot(weather$Hectare, weather$Number.of.Squirrels,
xlab="Hectare ID",
ylab="Number of Squirrel Sightings",
main="Squirrel Sightings per Hectare in Central Park")
# Heatmap with squirrels per hectare in central park
ggplot(data = weather, cache = TRUE, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "brown") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel density per hectare") +
theme(legend.position = "bottom")
library(osmdata)
library(sf)
library(ggmap)
squirrels <- read.csv("joint_squirrels.csv")
longitude_min <- min(squirrels$X) - 0.005
latitude_min <- min(squirrels$Y) - 0.001
longitude_max <- max(squirrels$X) + 0.005
latitude_max <- max(squirrels$Y) + 0.001
# Background map
mad_map <- get_map(location = c(left = longitude_min, bottom = latitude_min, right = longitude_max, top = latitude_max),
source = "stamen",
maptype = "toner-background",
zoom = 15,
cache = TRUE)
d.stations <- data.frame(Latitude = squirrels$Y,
Longitude = squirrels$X)
ggmap(mad_map) +
geom_point(data = squirrels,
aes(x = X, y = Y, color = ifelse(Hectare == "14B", "red", "gray"), alpha = 0.5),
) +
theme(legend.position = "right") +
labs(x = "Longitude", y = "Latitude") +
ggtitle("Squirrel Sightings in Central Park") +
scale_color_manual(name = "Hectare",
values = c("blue", "red"),
labels = c("Other Hectares", "14B"))
weather_sunny <- subset(weather, sunny == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when sunny
p_sunny <- ggplot(data = weather_sunny, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "gold") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Sunny)") +
theme(legend.position = "bottom")
p_sunny
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_rainy <- subset(weather, rainy == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when sunny
p_rainy <- ggplot(data = weather_rainy,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "darkblue") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Rainy)") +
theme(legend.position = "bottom")
p_rainy
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_cloudy <- subset(weather, cloudy == TRUE)
p_cloudy <- ggplot(data = weather_cloudy,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "darkgrey") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Cloudy)") +
theme(legend.position = "bottom")
p_cloudy
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_humid <- subset(weather, humid == TRUE)
p_humid <- ggplot(data = weather_humid,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "violet") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Humid)") +
theme(legend.position = "bottom")
p_humid
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_foggy <- subset(weather, foggy == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when foggy
p_foggy <- ggplot(data = weather_foggy,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "brown") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Foggy)") +
theme(legend.position = "bottom")
p_foggy
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_windy <- subset(weather, windy == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when windy
p_windy <- ggplot(data = weather_windy,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "red") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Windy)") +
theme(legend.position = "bottom")
p_windy
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather_drizzly <- subset(weather, drizzly == TRUE)
# Plot each subset in a separate plot: heatmap for squirrel sightings when windy
p_drizzly <- ggplot(data = weather_drizzly,
aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Drizzly)") +
theme(legend.position = "bottom")
p_drizzly
# because of include = false this code will be omitted in the html output for better readability.
# The echo (plot) will be printed tho.
weather$fill_alpha <- ifelse(weather$sunny & weather$rainy, 0.75,
ifelse(weather$sunny, 1, 0.5))
ggplot(data = weather, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = ifelse(sunny,
Number.of.Squirrels * (1-rainy),
Number.of.Squirrels * rainy),
alpha = fill_alpha)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = c("yellow", "blue"),
breaks = c(0, 1)) +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel Density per Hectare (Sunny and Rainy)") +
theme(legend.position = "bottom")
# Load the necessary packages
library(tidyverse)
# Fit the GLM model
model <- glm(Number.of.Squirrels ~ Date + Shift,
data = weather,
family = poisson())
# Summarize the model
summary(model)
model <- glm(Number.of.Squirrels ~ sunny + drizzly + cloudy + foggy + rainy + humid,
data = weather,
family = poisson())
summary(model)
# Fit the GLM
model <- glm(Number.of.Squirrels ~ sunny + drizzly + cloudy + foggy + rainy + humid + Shift + Hectare.Conditions + temperature_celsius,
data = weather,
family = poisson())
# Summarize the model
summary(model)
reg <- glm(Number.of.Squirrels ~ temperature_celsius * Shift, data = weather, family = poisson())
summary(reg)
# Heatmap with squirrels per hectare in central park
ggplot(data = weather, cache = TRUE, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "brown") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel density per hectare") +
theme(legend.position = "bottom")
library(ggplot2)
# Heatmap with squirrels per hectare in central park
ggplot(data = weather, cache = TRUE, aes(x = as.numeric(substr(Hectare, 1, 2)),
y = as.factor(substr(Hectare, 3, 3)),
fill = Number.of.Squirrels)) +
geom_tile() +
geom_text(aes(label = Hectare), color = "darkgrey", size = 3, vjust = 0.5) +
scale_fill_gradient(low = "white", high = "brown") +
scale_x_continuous(limits = c(0, 43), expand = c(0, 0)) +
scale_y_discrete(limits = c("A", "B", "C", "D", "E", "F", "G", "H", "I"), expand = c(0, 0)) +
labs(x = "Grid Column (1-42)", y = "Grid Row (A-I)", fill = "Number of Squirrels") +
theme_classic() +
ggtitle("Squirrel density per hectare") +
theme(legend.position = "bottom")
library(osmdata)
library(sf)
library(ggmap)
squirrels <- read.csv("joint_squirrels.csv")
